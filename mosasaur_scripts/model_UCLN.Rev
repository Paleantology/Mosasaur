     ucln_mean ~ dnExponential(2.0)

     # sigma

     ucln_sigma ~ dnExponential(3.0)

     # Set a deterministic node on sigma^2

     ucln_var := ucln_sigma * ucln_sigma

     ucln_mu := ln(ucln_mean) - (ucln_var * 0.5)

     moves.append(mvScale(ucln_mean, lambda=1.0, tune=true, weight=4.0))

     moves.append(mvScale(ucln_sigma, lambda=0.5, tune=true, weight=4.0))



     for (i in 1:num_branches){

         branch_rate_var[i] ~ dnLognormal(ucln_mu, ucln_sigma)

         moves.append(mvScale(branch_rate_var[i], lambda=1, tune=true, weight=2.0))

     }

     moves.append(mvVectorScale(branch_rate_var,lambda=1.0,tune=true,weight=2.0))

     moves.append(mvVectorSingleElementScale(branch_rate_var,lambda=30.0,tune=true,weight=1.0))
